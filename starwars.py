# coding=utf-8
from pytg.sender import Sender
from pytg.receiver import Receiver
from pytg.utils import coroutine
from collections import deque
from time import time, sleep
from getopt import getopt
import sys
import datetime as dt
import re
import _thread
import random

# username –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞
bot_username = 'ChatWarsBot'

stock_bot = 'WarChatsEquip_bot'

# –≤–∞—à username –∏–ª–∏ username —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã —ç—Ç–æ–º—É —Å–∫—Ä–∏–ø—Ç—É
admin_username = 'colobot13'

# username –±–æ—Ç–∞ –∏/–∏–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–∫–∞–∑—ã
order_usernames = 'colobot13'

# –∏–º—è –∑–∞–º–∫–∞
castle_name = 'blue'

captcha_bot = 'ChatWarsCaptchaBot'

# –ø—É—Ç—å –∫ —Å–æ–∫–µ—Ç —Ñ–∞–π–ª—É
socket_path = ''

# —Ö–æ—Å—Ç —á—Ç–æ–± —Å–ª—É—à–∞—Ç—å telegram-cli
host = 'localhost'

# –ø–æ—Ä—Ç –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å–ª—É—à–∞—Ç—å
port = 1338

opts, args = getopt(sys.argv[1:], 'a:o:c:s:h:p', ['admin=', 'order=', 'castle=', 'socket=', 'host=', 'port='])

for opt, arg in opts:
    if opt in ('-a', '--admin'):
        admin_username = arg
    elif opt in ('-o', '--order'):
        order_usernames = arg.split(',')
    elif opt in ('-c', '--castle'):
        castle_name = arg
    elif opt in ('-s', '--socket'):
        socket_path = arg
    elif opt in ('-h', '--host'):
        host = arg
    elif opt in ('-p', '--port'):
        port = int(arg)

orders = {
    'red': '‚≠ï',
    'black': '‚ö´',
    'white': 'üåê',
    'yellow': '‚ò†',
    'blue': '‚öñ',
    'lesnoi_fort': 'üõ¢–ù–∞—É—á–Ω—ã–π —Ü–µ–Ω—Ç—Ä',
    'les': 'üõ∞–ü–æ–º–æ—á—å –∫–æ—Ä–∞–±–ª—é',
    'gorni_fort': 'üíé–†–µ—Å—É—Ä—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä',
    #'gora': '‚õ∞',
    'cover': 'üéö–û–±–æ—Ä–æ–Ω–∞',
    'attack': 'üí£–ù–∞–ø–∞–¥–µ–Ω–∏–µ',
    #'cover_symbol': 'üõ°',
    'hero': 'üë®‚ÄçüöÄ –ü–∏–ª–æ—Ç',
    'corovan': '/go',
    'peshera': 'üîé–ò–∑—É—á–∏—Ç—å –ø–ª–∞–Ω–µ—Ç—É',
    'taverna': 'üç∫–í–∑—è—Ç—å –∫—Ä—É–∂–∫—É —ç–ª—è',
    'kvesty': '‚å®Ô∏è –¢–µ—Ä–º–∏–Ω–∞–ª'

}

captcha_answers = {
    'watermelon_n_cherry': 'üçâüçí',
    'bread_n_cheese': 'üçûüßÄ',
    'cheese': 'üßÄ',
    'pizza': 'üçï',
    'hotdog': 'üå≠',
    'eggplant_n_carrot': 'üçÜü•ï',
    'dog': 'üêï',
    'horse': 'üêé',
    'goat': 'üêê',
    'cat': 'üêà',
    'pig': 'üêñ',
    'squirrel': 'üêø'
}

states_map = {
    'relax': 'üõå–û—Ç–¥—ã—Ö',
    'defense': 'üõ°–ó–∞—â–∏—Ç–∞',
    'attack': '‚öî–ê—Ç–∞–∫–∞',
    'arena': 'üìØ–ù–∞ –∞—Ä–µ–Ω–µ',
    'les': 'üå≤–í –ª–µ—Å—É',
    'peshera': 'üï∏–í –ø–µ—â–µ—Ä–µ',
    'taverna': 'üç∫–ü—å–µ—à—å –≤ —Ç–∞–≤–µ—Ä–Ω–µ'
}

arena_cover = ['üõ°–≥–æ–ª–æ–≤—ã', 'üõ°–∫–æ—Ä–ø—É—Å–∞', 'üõ°–Ω–æ–≥']
arena_attack = ['üó°–≤ –≥–æ–ª–æ–≤—É', 'üó°–ø–æ –∫–æ—Ä–ø—É—Å—É', 'üó°–ø–æ –Ω–æ–≥–∞–º']
# –ø–æ–º–µ–Ω—è—Ç—å blue –Ω–∞ red, black, white, yellow –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –∑–∞–º–∫–∞
castle = orders[castle_name]
# —Ç–µ–∫—É—â–∏–π –ø—Ä–∏–∫–∞–∑ –Ω–∞ –∞—Ç–∞–∫—É/–∑–∞—â–∏—Ç—É, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ–≥–¥–∞ –∑–∞—â–∏—Ç–∞, —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
current_order = {'time': 0, 'order': castle}

sender = Sender(sock=socket_path) if socket_path else Sender(host=host, port=port)
action_list = deque([])
log_list = deque([], maxlen=30)
lt_arena = 0
get_info_diff = 360
hero_message_id = 0
last_captcha_id = 0

bot_enabled = True
arena_enabled = True
taverna_enabled = False
les_enabled = True
peshera_enabled = False
corovan_enabled = True
order_enabled = True
auto_def_enabled = True
donate_enabled = False


@coroutine
def work_with_message(receiver):
    while True:
        msg = (yield)
        try:
            if msg['event'] == 'message' and 'text' in msg and msg['peer'] is not None:
                parse_text(msg['text'], msg['sender']['username'], msg['id'])
        except Exception as err:
            log('–û—à–∏–±–∫–∞ coroutine: {0}'.format(err))


def queue_worker():
    global get_info_diff
    lt_info = 0
    # –≥—Ä–µ–±–∞–Ω–∞—è –º–∞–≥–∏—è
    print(sender.contacts_search(bot_username))
    print(sender.contacts_search(captcha_bot))
    print(sender.contacts_search(admin_username))
    print(sender.contacts_search(stock_bot))
    #sender.dialog_list()
    sleep(3)
    while True:
        try:

            if time() - lt_info > get_info_diff:
                lt_info = time()
                get_info_diff = random.randint(300, 500)
                if bot_enabled:
                    send_msg(bot_username, orders['hero'])
                continue

            if len(action_list):
                log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º ' + action_list[0])
                send_msg(bot_username, action_list.popleft())
            sleep_time = random.randint(2, 6)
            sleep(sleep_time)
        except Exception as err:
            log('–û—à–∏–±–∫–∞ –æ—á–µ—Ä–µ–¥–∏: {0}'.format(err))


def parse_text(text, username, message_id):
    global lt_arena
    global lt_info
    global hero_message_id
    global bot_enabled
    global arena_enabled
    global taverna_enabled
    global les_enabled
    global peshera_enabled
    global corovan_enabled
    global order_enabled
    global auto_def_enabled
    global donate_enabled
    global last_captcha_id
    if username == bot_username:
        log('–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è')

        if "–ù–∞ –≤—ã—Ö–æ–¥–µ –∏–∑ –∑–∞–º–∫–∞ –æ—Ö—Ä–∞–Ω–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç" in text:
            log('–ù–∞ –≤—ã—Ö–æ–¥–µ –∏–∑ –∑–∞–º–∫–∞ –æ—Ö—Ä–∞–Ω–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç')
            with open('captcha.txt', 'a+') as f:
                f.seek(0)
                for line in f:
                    if text in line:
                        break
                else:
                    f.write(text + '\n' + '-' * 8 + '\n')

            action_list.clear()
            send_msg(admin_username, "–ö–æ–º–∞–Ω–¥–∏—Ä, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–ø—á–æ–π! #captcha " + '|'.join(captcha_answers.keys()))
            fwd(admin_username, message_id)
            last_captcha_id = message_id
            fwd(captcha_bot, message_id)
            bot_enabled = False

        elif '–ù–µ —É–º–Ω–∏—á–∞–π!' in text or '–¢—ã –¥–æ–ª–≥–æ –¥—É–º–∞–ª, –∞–∂ –≤—Å–ø–æ—Ç–µ–ª –æ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è' in text or '–ù–µ —à—É—Ç–∏ —Å–æ —Å—Ç—Ä–∞–∂–Ω–∏–∫–∞–º–∏' in text:
            log('–ö–æ–º–∞–Ω–¥–∏—Ä, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–ø—á–æ–π!')
            send_msg(admin_username, "–ö–æ–º–∞–Ω–¥–∏—Ä, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–ø—á–æ–π! #captcha " + '|'.join(captcha_answers.keys()))
            bot_enabled = False
            if last_captcha_id != 0:
                fwd(admin_username, last_captcha_id)
            else:
                send_msg(admin_username, '–ö–∞–ø—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞?')

        elif '–¢—ã —Å–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∫–æ–≥–¥–∞ –æ—Ç–¥–æ—Ö–Ω–µ—à—å.' in text:
            log('–ù–µ —É–≥–∞–¥–∞–ª–∏ —Å –∫–∞–ø—á–µ–π, –≤—ã—Ä—É–±–∞—é –±–æ—Ç–∞')
            send_msg(admin_username, "–ù–µ —É–≥–∞–¥–∞–ª–∏ —Å –∫–∞–ø—á–µ–π, –≤—ã—Ä—É–±–∞—é –±–æ—Ç–∞")
            bot_enabled = False

        elif '–¢—ã –æ—Ç–≤–µ—Ç–∏–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ' in text:
            log('–£—Ä–∞, —É–≥–∞–¥–∞–ª–∏ –∫–∞–ø—á—É! –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞')
            send_msg(admin_username, "–£—Ä–∞, —É–≥–∞–¥–∞–ª–∏ –∫–∞–ø—á—É! –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞")
            bot_enabled = True

        if bot_enabled:
            log('–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω')
            if corovan_enabled and text.find(' /go') != -1:
                log('–õ–æ–≤–ª—é –∫–æ—Ä–æ–≤–∞–Ω')
                action_list.append(orders['corovan'])

            elif text.find('–°—Ä–∞–∂–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –Ω–µ —á–∞—â–µ —á–µ–º –æ–¥–∏–Ω —Ä–∞–∑ –≤ —á–∞—Å.') != -1:
                log('–°—Ä–∞–∂–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –Ω–µ —á–∞—â–µ —á–µ–º –æ–¥–∏–Ω —Ä–∞–∑ –≤ —á–∞—Å.')
                lt_arena = time()
                lt_info = time()
                action_list.append(orders['hero'])

            elif text.find('–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –±–∏—Ç–≤–∞ —á–µ—Ä–µ–∑') != -1:
                log('–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –±–∏—Ç–≤–∞ —á–µ—Ä–µ–∑ ? —á—Ç–æ —Ö–∞ —Ö—Ä–µ–Ω—å')
                hero_message_id = message_id
                log(hero_message_id)
                m = re.search('–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –±–∏—Ç–≤–∞ —á–µ—Ä–µ–∑(?: ([0-9]+)—á){0,1}(?: ([0-9]+)){0,1}', text)
                log(m)
                state = re.search('–°—Ç–∞—Ç—É—Å:\\n(.*)\\n', text)
                log(state)
                if not m.group(1):
                    log('if not m.group(1)')
                    log(m.group(1))
                    if m.group(2) and int(m.group(2)) <= 30:
                        if auto_def_enabled and time() - current_order['time'] > 3600:
                            if donate_enabled:
                                gold = int(re.search('üí¥([0-9]+)', text).group(1))
                                log('–î–æ–Ω–∞—Ç {0} –∑–æ–ª–æ—Ç–∞ –≤ –∫–∞–∑–Ω—É –∑–∞–º–∫–∞'.format(gold))
                                action_list.append('/donate {0}'.format(gold))
                            update_order(castle)
                        return
                if states_map['relax'] not in state.group(1) and states_map['defense'] not in state.group(1) and \
                                states_map['attack'] not in state.group(1):
                    return

                log('–í—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ')
                gold = int(re.search('üí¥([0-9]+)', text).group(1))
                endurance = int(re.search('–¢–æ–ø–ª–∏–≤–æ: ([0-9]+)', text).group(1))
                log('–ó–æ–ª–æ—Ç–æ: {0}, –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {1}'.format(gold, endurance))

                #if text.find('/level_up') != -1 and '/level_up' not in action_list:
                #    damage = int(re.search('–ê—Ç–∞–∫–∞: ([0-9]+)', text).group(1))
                #    defence = int(re.search('–ó–∞—â–∏—Ç–∞: ([0-9]+)', text).group(1))
                #    action_list.append('/level_up')
                #    log('level_up')
                #    if damage > defence:
                #        action_list.append('+1 ‚öî–ê—Ç–∞–∫–∞')
                #    else:
                #        action_list.append('+1 üõ°–ó–∞—â–∏—Ç–∞')

                if peshera_enabled and endurance >= 2 and orders['peshera'] not in action_list:
                    action_list.append(orders['kvesty'])
                    sleep(2)
                    action_list.append(orders['peshera'])

                elif les_enabled and endurance >= 2 and orders['les'] not in action_list:
                    action_list.append(orders['kvesty'])
                    sleep(2)
                    action_list.append(orders['les'])

                elif arena_enabled and gold >= 5 and 'üîé–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞' not in action_list and time() - lt_arena > 3600:
                    action_list.append('üîé–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞')

                elif taverna_enabled and gold >= 20 and orders['taverna'] not in action_list and \
                        (dt.datetime.now().time() >= dt.time(19) or dt.datetime.now().time() < dt.time(6)):
                    action_list.append(orders['taverna'])

            elif arena_enabled and text.find('–≤—ã–±–µ—Ä–∏ —Ç–æ—á–∫—É –∞—Ç–∞–∫–∏ –∏ —Ç–æ—á–∫—É –∑–∞—â–∏—Ç—ã') != -1:
                lt_arena = time()
                attack_chosen = arena_attack[random.randint(0, 2)]
                cover_chosen = arena_cover[random.randint(0, 2)]
                log('–ê—Ç–∞–∫–∞: {0}, –ó–∞—â–∏—Ç–∞: {1}'.format(attack_chosen, cover_chosen))
                action_list.append(attack_chosen)
                action_list.append(cover_chosen)

            elif text.find('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫–ª–∞–¥–∞') != -1:
                fwd(stock_bot, message_id)

            elif "–•–æ—Ä–æ—à–æ!" not in text and "–•–æ—Ä–æ—à–∏–π –ø–ª–∞–Ω" not in text and "5 –º–∏–Ω—É—Ç" not in text and \
                            "–û—à–∏–±–∫–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Ç–µ—Ä–º–∏–Ω–∞–ª—É" not in text and "–°–æ–ª–Ω–µ—á–Ω—ã–π –≤–µ—Ç–µ—Ä –∑–∞–≤—ã–≤–∞–µ—Ç" not in text and \
                            "–°–æ–ø–µ—Ä–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω" not in text and "–°–∏–Ω–∏–π –∑–∞–º–æ–∫" not in text and \
                            "–°–∏–Ω–µ–≥–æ –∑–∞–º–∫–∞" not in text and "–û–±—â–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ —Ñ—Ä–∞–∫—Ü–∏–∏" not in text and \
                            "–ü–æ–±–µ–¥–∏–ª –ø–∏–ª–æ—Ç" not in text and not re.findall(r'\b–Ω–∞–Ω–µ—Å\b(.*)\b—É–¥–∞—Ä\b', s):
                #with open('taverna.txt', 'a+') as f:
                #    f.seek(0)
                #    for line in f:
                #        if text[0:8] in line:
                #            break
                #    else:
                #        f.write(text + '\n')
                action_list.append(orders['hero'])
                lt_info = time()

    elif username == 'ChatWarsCaptchaBot':
        if len(text) <= 4 and text in captcha_answers.values():
            sleep(3)
            action_list.clear()
            action_list.append(text)
            bot_enabled = True

    else:
        if bot_enabled and order_enabled and username in order_usernames:
            if text.find(orders['red']) != -1:
                update_order(orders['red'])
            elif text.find(orders['black']) != -1:
                update_order(orders['black'])
            elif text.find(orders['white']) != -1:
                update_order(orders['white'])
            elif text.find(orders['yellow']) != -1:
                update_order(orders['yellow'])
            elif text.find(orders['blue']) != -1:
                update_order(orders['blue'])
            elif text.find('üå≤') != -1:
                update_order(orders['lesnoi_fort'])
            elif text.find('‚õ∞') != -1:
                update_order(orders['gorni_fort'])
            elif text.find('üõ°') != -1:
                update_order(castle)

                # send_msg(admin_username, '–ü–æ–ª—É—á–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É ' + current_order['order'] + ' –æ—Ç ' + username)

        if username == admin_username:
            if text == '#help':
                send_msg(admin_username, '\n'.join([
                    '#enable_bot - –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#disable_bot - –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#enable_arena - –í–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#disable_arena - –í—ã–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#disable_taverna - –í—ã–∫–ª—é—á–∏—Ç—å —Ç–∞–≤–µ—Ä–Ω—É',
                    '#enable_taverna - –í–ª—é—á–∏—Ç—å —Ç–∞–≤–µ—Ä–Ω—É',
                    '#enable_les - –í–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#disable_les - –í—ã–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#enable_peshera - –í–∫–ª—é—á–∏—Ç—å –ø–µ—â–µ—Ä—ã',
                    '#disable_peshera - –í—ã–∫–ª—é—á–∏—Ç—å –ø–µ—â–µ—Ä—ã',
                    '#enable_corovan - –í–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#disable_corovan - –í—ã–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#enable_order - –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#disable_order - –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#enable_auto_def - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#disable_auto_def - –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#enable_donate - –í–∫–ª—é—á–∏—Ç—å –¥–æ–Ω–∞—Ç',
                    '#disable_donate - –í—ã–∫–ª—é—á–∏—Ç—å –¥–æ–Ω–∞—Ç',
                    '#update_stock - –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–æ–∫',
                    '#status - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å',
                    '#hero - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ—Ä–æ–µ',
                    '#push_order - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∫–∞–∑ ({0})'.format(','.join(orders)),
                    '#order - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞—â–∏—Ç—ã/–∞—Ç–∞–∫–∏ –∑–∞–º–∫–∞',
                    '#log - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ª–æ–≥–∞',
                    '#time - –î–µ–±–∞–≥, —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è',
                    '#lt_arena - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –±–∏—Ç–≤–∞ –Ω–∞ –∞—Ä–µ–Ω–µ',
                    '#get_info_diff - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–µ—Ä–æ–µ',
                    '#ping - –î–µ–±–∞–≥, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∂–∏–≤ –ª–∏ –±–æ—Ç',
                ]))

            # –í–∫–ª/–≤—ã–∫–ª –±–æ—Ç–∞
            elif text == '#enable_bot':
                bot_enabled = True
                send_msg(admin_username, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_bot':
                bot_enabled = False
                send_msg(admin_username, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞—Ä–µ–Ω—ã
            elif text == '#enable_arena':
                arena_enabled = True
                send_msg(admin_username, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            elif text == '#disable_arena':
                arena_enabled = False
                send_msg(admin_username, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª —Ç–∞–≤–µ—Ä–Ω—ã
            elif text == '#enable_taverna':
                taverna_enabled = True
                send_msg(admin_username, '–¢–∞–≤–µ—Ä–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            elif text == '#disable_taverna':
                taverna_enabled = False
                send_msg(admin_username, '–¢–∞–≤–µ—Ä–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª –ª–µ—Å–∞
            elif text == '#enable_les':
                les_enabled = True
                send_msg(admin_username, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_les':
                les_enabled = False
                send_msg(admin_username, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –ø–µ—â–µ—Ä—ã
            elif text == '#enable_peshera':
                peshera_enabled = True
                send_msg(admin_username, '–ü–µ—â–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            elif text == '#disable_peshera':
                peshera_enabled = False
                send_msg(admin_username, '–ü–µ—â–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ—Ä–æ–≤–∞–Ω–∞
            elif text == '#enable_corovan':
                corovan_enabled = True
                send_msg(admin_username, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            elif text == '#disable_corovan':
                corovan_enabled = False
                send_msg(admin_username, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ–º–∞–Ω–¥
            elif text == '#enable_order':
                order_enabled = True
                send_msg(admin_username, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            elif text == '#disable_order':
                order_enabled = False
                send_msg(admin_username, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–µ—Ñ
            elif text == '#enable_auto_def':
                auto_def_enabled = True
                send_msg(admin_username, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_auto_def':
                auto_def_enabled = False
                send_msg(admin_username, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–æ–Ω–∞—Ç
            elif text == '#enable_donate':
                donate_enabled = True
                send_msg(admin_username, '–î–æ–Ω–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_donate':
                donate_enabled = False
                send_msg(admin_username, '–î–æ–Ω–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            elif text == '#update_stock':
                action_list.append('/stock')

            # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            elif text == '#status':
                send_msg(admin_username, '\n'.join([
                    '–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω: {0}',
                    '–ê—Ä–µ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞: {1}',
                    '–õ–µ—Å –≤–∫–ª—é—á–µ–Ω: {2}',
                    '–ü–µ—â–µ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞: {3}',
                    '–ö–æ—Ä–æ–≤–∞–Ω—ã –≤–∫–ª—é—á–µ–Ω—ã: {4}',
                    '–ü—Ä–∏–∫–∞–∑—ã –≤–∫–ª—é—á–µ–Ω—ã: {5}',
                    '–ê–≤—Ç–æ –¥–µ—Ñ –≤–∫–ª—é—á–µ–Ω: {6}',
                    '–î–æ–Ω–∞—Ç –≤–∫–ª—é—á–µ–Ω: {7}',
                    '–¢–∞–≤–µ—Ä–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞: {8}'
                ]).format(bot_enabled, arena_enabled, les_enabled, peshera_enabled, corovan_enabled, order_enabled,
                          auto_def_enabled, donate_enabled, taverna_enabled))

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ—Ä–æ–µ
            elif text == '#hero':
                if hero_message_id == 0:
                    send_msg(admin_username, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ—Ä–æ–µ –ø–æ–∫–∞ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
                else:
                    fwd(admin_username, hero_message_id)

            # –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥
            elif text == '#log':
                send_msg(admin_username, '\n'.join(log_list))
                log_list.clear()

            elif text == '#lt_arena':
                send_msg(admin_username, str(dt.datetime.fromtimestamp(lt_arena).time()))

            elif text == '#order':
                text_date = str(dt.datetime.fromtimestamp(current_order['time']).time())
                send_msg(admin_username, current_order['order'] + ' ' + text_date)

            elif text == '#time':
                text_date = str(dt.datetime.now().time())
                send_msg(admin_username, text_date)

            elif text == '#ping':
                send_msg(admin_username, '#pong')

            elif text == '#get_info_diff':
                send_msg(admin_username, str(get_info_diff))

            elif text.startswith('#push_order'):
                command = text.split(' ')[1]
                if command in orders:
                    update_order(orders[command])
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
                else:
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')

            elif text.startswith('#captcha'):
                command = text.split(' ')[1]
                if command in captcha_answers:
                    action_list.clear()
                    action_list.append(captcha_answers[command])
                    bot_enabled = True
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
                else:
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')


def send_msg(to, message):
    sender.mark_read('@' + to)
    sender.send_msg('@' + to, message)


def fwd(to, message_id):
    sender.fwd('@' + to, message_id)


def update_order(order):
    current_order['order'] = order
    current_order['time'] = time()
    if order == castle:
        action_list.append(orders['cover'])
    else:
        action_list.append(orders['attack'])
    action_list.append(order)


def log(text):
    message = '{0:%Y-%m-%d %H:%M:%S}'.format(dt.datetime.now()) + ' ' + text
    print(message)
    log_list.append(message)


if __name__ == '__main__':
    receiver = Receiver(sock=socket_path) if socket_path else Receiver(port=port)
    receiver.start()  # start the Connector.
    _thread.start_new_thread(queue_worker, ())
    receiver.message(work_with_message(receiver))
    receiver.stop()
